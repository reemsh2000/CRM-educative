{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ClientService = /*#__PURE__*/(() => {\n  class ClientService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.clientAPIUrl = 'api/clients';\n    } // save a client to local storage\n\n\n    save(client) {\n      const url = `${this.clientAPIUrl}`;\n      return this.httpClient.post(url, client);\n    } // get client by clientID\n\n\n    getClientByID(clientId) {\n      const url = `${this.clientAPIUrl}/${clientId}`;\n      return this.httpClient.get(url);\n    } // get a list of the clients\n\n\n    getClients() {\n      const url = `${this.clientAPIUrl}`;\n      return this.httpClient.get(url);\n    } // archive a client\n\n\n    deleteClient(clientId) {\n      const url = `${this.clientAPIUrl}/${clientId}`;\n      return this.httpClient.delete(url);\n    } // update a clients details\n\n\n    updateClient(client) {\n      const url = `${this.clientAPIUrl}`;\n      return this.httpClient.put(url, client);\n    } // search the clients list\n\n\n    search(searchTerm) {\n      searchTerm.trim();\n      const url = `${this.clientAPIUrl}`;\n      const searchOptions = searchTerm ? {\n        params: new HttpParams().set('firstname', searchTerm)\n      } : {};\n      return this.httpClient.get(url, searchOptions);\n    }\n\n  }\n\n  ClientService.ɵfac = function ClientService_Factory(t) {\n    return new (t || ClientService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ClientService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClientService,\n    factory: ClientService.ɵfac,\n    providedIn: 'root'\n  });\n  return ClientService;\n})();","map":null,"metadata":{},"sourceType":"module"}